services:
  pg-primary:
    # Using 'latest' because only this tag is available in your registry/Docker Hub view
    image: bitnami/postgresql:latest
    container_name: pg-primary
    restart: unless-stopped
    environment:
      # Basis-DB (App-User optional)
      - POSTGRESQL_USERNAME=app
      - POSTGRESQL_PASSWORD=app_password
      - POSTGRESQL_DATABASE=appdb
      # Superuser (postgres)
      - POSTGRESQL_POSTGRES_PASSWORD=supersecret
      # Replikation
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_secret
      # Synchronie: 1 synchrone Replica, Commit wartet auf deren Bestätigung
      - POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS=1
      # remote_apply = am strengsten (WAL angewendet auf Replica)
      - POSTGRESQL_SYNCHRONOUS_COMMIT_MODE=remote_apply
      # application_name, auf das sich synchronous_standby_names referenziert
      - POSTGRESQL_CLUSTER_APP_NAME=replica1
    ports:
      - "127.0.0.1:55432:5432"
    volumes:
      - pg_primary_data:/bitnami/postgresql
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=app_password pg_isready -U app -d appdb -h 127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks: [pgnet]

  pg-replica:
    # Using 'latest' to match availability in your registry
    image: bitnami/postgresql:latest
    container_name: pg-replica
    restart: unless-stopped
    depends_on:
      pg-primary:
        condition: service_healthy
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_MASTER_HOST=pg-primary
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_secret
      # Muss mit dem Namen im Primary (CLUSTER_APP_NAME) zusammenpassen
      - POSTGRESQL_CLUSTER_APP_NAME=replica1
      # Optional: nur lesen zulassen (Standard der Replica ist bereits read-only)
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "127.0.0.1:55433:5432" # Zugriff auf die Read-Replica über 55433
    volumes:
      - pg_replica_data:/bitnami/postgresql
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=repl_secret pg_isready -U repl_user -d postgres -h 127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks: [pgnet]

  cockroach-1:
    image: cockroachdb/cockroach:latest
    container_name: cockroach-1
    restart: unless-stopped
    command: start --insecure --listen-addr=cockroach-1:26257 --http-addr=0.0.0.0:8080 --join=cockroach-1:26257,cockroach-2:26257,cockroach-3:26257
    ports:
      - "127.0.0.1:56257:26257" # SQL Port node 1
      - "127.0.0.1:58080:8080"  # Web UI node 1
    volumes:
      - cockroach1_data:/cockroach/cockroach-data
    healthcheck:
      test: ["CMD-SHELL", "cockroach sql --insecure --host=127.0.0.1:26257 -e 'SELECT 1' >/dev/null 2>&1"]
      interval: 5s
      timeout: 5s
      retries: 30
    networks: [pgnet]

  cockroach-2:
    image: cockroachdb/cockroach:latest
    container_name: cockroach-2
    restart: unless-stopped
    command: start --insecure --listen-addr=cockroach-2:26257 --http-addr=0.0.0.0:8080 --join=cockroach-1:26257,cockroach-2:26257,cockroach-3:26257
    ports:
      - "127.0.0.1:56258:26257" # SQL Port node 2
      - "127.0.0.1:58081:8080"  # Web UI node 2
    volumes:
      - cockroach2_data:/cockroach/cockroach-data
    healthcheck:
      test: ["CMD-SHELL", "cockroach sql --insecure --host=127.0.0.1:26257 -e 'SELECT 1' >/dev/null 2>&1"]
      interval: 5s
      timeout: 5s
      retries: 30
    networks: [pgnet]

  cockroach-3:
    image: cockroachdb/cockroach:latest
    container_name: cockroach-3
    restart: unless-stopped
    command: start --insecure --listen-addr=cockroach-3:26257 --http-addr=0.0.0.0:8080 --join=cockroach-1:26257,cockroach-2:26257,cockroach-3:26257
    ports:
      - "127.0.0.1:56259:26257" # SQL Port node 3
      - "127.0.0.1:58082:8080"  # Web UI node 3
    volumes:
      - cockroach3_data:/cockroach/cockroach-data
    healthcheck:
      test: ["CMD-SHELL", "cockroach sql --insecure --host=127.0.0.1:26257 -e 'SELECT 1' >/dev/null 2>&1"]
      interval: 5s
      timeout: 5s
      retries: 30
    networks: [pgnet]

  cockroach-init:
    image: cockroachdb/cockroach:latest
    container_name: cockroach-init
    depends_on:
      cockroach-1:
        condition: service_started
      cockroach-2:
        condition: service_started
      cockroach-3:
        condition: service_started
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "cockroach init --insecure --host=cockroach-1:26257 || true"
    networks: [pgnet]

networks:
  pgnet:

volumes:
  pg_primary_data:
  pg_replica_data:
  cockroach1_data:
  cockroach2_data:
  cockroach3_data: